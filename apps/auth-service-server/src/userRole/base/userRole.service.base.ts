/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, UserRole as PrismaUserRole } from "@prisma/client";

export class UserRoleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.UserRoleCountArgs, "select">): Promise<number> {
    return this.prisma.userRole.count(args);
  }

  async userRoles<T extends Prisma.UserRoleFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserRoleFindManyArgs>
  ): Promise<PrismaUserRole[]> {
    return this.prisma.userRole.findMany<Prisma.UserRoleFindManyArgs>(args);
  }
  async userRole<T extends Prisma.UserRoleFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserRoleFindUniqueArgs>
  ): Promise<PrismaUserRole | null> {
    return this.prisma.userRole.findUnique(args);
  }
  async createUserRole<T extends Prisma.UserRoleCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserRoleCreateArgs>
  ): Promise<PrismaUserRole> {
    return this.prisma.userRole.create<T>(args);
  }
  async updateUserRole<T extends Prisma.UserRoleUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserRoleUpdateArgs>
  ): Promise<PrismaUserRole> {
    return this.prisma.userRole.update<T>(args);
  }
  async deleteUserRole<T extends Prisma.UserRoleDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserRoleDeleteArgs>
  ): Promise<PrismaUserRole> {
    return this.prisma.userRole.delete(args);
  }
}
